{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pwd\n",
    "import os\n",
    "import snudda\n",
    "import inspect\n",
    "!cd /home/jofrony/Documents/Repositories/BasalGangliaExperiments/neuromodulation/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "cellTypefolder = \"cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from neuromodulation.Neuron_model_extended import NeuronModel\n",
    "from neuromodulation.create import createInstance\n",
    "os.chdir(os.path.dirname(inspect.getfile(snudda)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "createInstance(name = \"dSPN\",parameterID = 0, modulationID = 0,modeldir = cellTypefolder)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "\n",
    "sheet1 = sheet(rows=3,columns=4)\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=3,columns=4)\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=3,columns=4)\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1\n",
    "mechanisms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "max(mechanisms.values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "max(len(mechanisms.values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "mechanisms.values()\n",
    "max(max(paths, key=len), key=len)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "mechanisms.values()\n",
    "max(mechanisms.values(), key=len)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "mechanisms.values()\n",
    "len(max(mechanisms.values(), key=len))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys())\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1\n",
    "mechanisms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()))\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1\n",
    "mechanisms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()))\n",
    "\n",
    "cell1 = cell(0,0, \"Hello\")\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()))\n",
    "\n",
    "cell1 = cell(0, mechanisms.keys())\n",
    "cell2 = cell(2,0, \"World\")\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "cell1 = row(0, mechanisms.keys())\n",
    "\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,[1,2])\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    " mechanisms.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,[1,2])\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "mechanisms.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,[1,2])\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#mechanisms.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))*2,columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "\n",
    "row(0,0,6list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "\n",
    "row(0,0,6,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0, row_start =1,mechanisms.values()[0])\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,mechanisms.values()[0],row_start =1)\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start =1)\n",
    "\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start =1)\n",
    "\n",
    "row(1,list(mechanisms.keys()))\n",
    "column(1,list(mechanisms.values())[1],row_start =1)\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "#mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len)),columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))*2,columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))*2,columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "#mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys()),column_headers=False)\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "#mechanisms.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys()),column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "print(list2)\n",
    "result = [None]*(len(list1)+len(list2))\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys()),column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.values()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.values())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,list(mechanisms.keys()))\n",
    "column(0,firstrow,row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys()),column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.values()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.values())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.values()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.values())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.values())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(1,list(mechanisms.values())[1],row_start = 3)\n",
    "\n",
    "column(2,list(mechanisms.values())[2],row_start = 5)\n",
    "\n",
    "column(3,list(mechanisms.values())[3],row_start = 7)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(3,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(5,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(7,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "column(0,[None]*14,row_start = 1)\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "column(1,[None]*14,row_start = 1)\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "column(1,[None]*12,row_start = 1)\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))*2,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))*2,columns=len(mechanisms.keys())*3,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "#row(0,firstrow)\n",
    "#column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "#column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "#column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,[1,2,3])\n",
    "#column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,[1,2,3])\n",
    "column(0,list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,[1,2,3])\n",
    "column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,[1,2,3])\n",
    "cell = column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "row(0,firstrow)\n",
    "column(0,[1,2,3])\n",
    "cell = column(0,list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "column(0,[None]*15)\n",
    "row(0,firstrow)\n",
    "\n",
    "cell = column(0,list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "column(0,[None]*15)\n",
    "row(0,firstrow)\n",
    "\n",
    "cell = column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "column(0,[None]*15)\n",
    "\n",
    "cell = column(0,list(mechanisms.values())[0],row_start = 1)\n",
    "row(0,firstrow)\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(mechanisms.keys()) + list(mechanisms.values())[0],row_start = 1)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(mechanisms.keys()) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(mechanisms.keys())[0] + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(mechanisms.keys()[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(list(mechanisms.keys())[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(list(mechanisms.keys())[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]\n",
    "list(mechanisms.keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(list(mechanisms.keys())[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]\n",
    "list(mechanisms.keys())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(list(mechanisms.keys())[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]\n",
    "list(list(mechanisms.keys())[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list(list(mechanisms.keys())[0]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]\n",
    "list([list(mechanisms.keys())[0]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "\n",
    "\n",
    "#column(2,list(mechanisms.values())[1],row_start = 1)\n",
    "\n",
    "#column(4,list(mechanisms.values())[2],row_start = 1)\n",
    "\n",
    "#column(6,list(mechanisms.values())[3],row_start = 1)\n",
    "\n",
    "sheet1\n",
    "list(mechanisms.values())[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[1]]) + list(mechanisms.values())[1],row_start = 0)\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[2]]) + list(mechanisms.values())[2],row_start = 0)\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[3]]) + list(mechanisms.values())[3],row_start = 0)\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "list2 = [\"range\"]*4\n",
    "\n",
    "firstrow = [None]*(len(list(mechanisms.keys()))+len(list2))\n",
    "firstrow[::2] = list(mechanisms.keys())\n",
    "firstrow[1::2] = list2\n",
    "\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "\n",
    "cell = column(1,list([list(mechanisms.keys())[1]]) + list(mechanisms.values())[1],row_start = 0)\n",
    "\n",
    "cell = column(2,list([list(mechanisms.keys())[2]]) + list(mechanisms.values())[2],row_start = 0)\n",
    "\n",
    "cell = column(3,list([list(mechanisms.keys())[3]]) + list(mechanisms.values())[3],row_start = 0)\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "cell = column(1,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(2,list([list(mechanisms.keys())[1]]) + list(mechanisms.values())[1],row_start = 0)\n",
    "\n",
    "cell = column(4,list([list(mechanisms.keys())[2]]) + list(mechanisms.values())[2],row_start = 0)\n",
    "\n",
    "cell = column(6,list([list(mechanisms.keys())[3]]) + list(mechanisms.values())[3],row_start = 0)\n",
    "\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "cell = column(1,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(2,list([list(mechanisms.keys())[1]]) + list(mechanisms.values())[1],row_start = 0)\n",
    "cell = column(3,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(4,list([list(mechanisms.keys())[2]]) + list(mechanisms.values())[2],row_start = 0)\n",
    "cell = column(5,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(6,list([list(mechanisms.keys())[3]]) + list(mechanisms.values())[3],row_start = 0)\n",
    "cell = column(7,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.fillna('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "mechanisms = json.load(open(\"data/cellspecs-v2/dspn/str-dspn-e150602_c1_D1-mWT-0728MSN01-v20190508/mechanisms.json\"))\n",
    "\n",
    "sheet1 = sheet(rows=len(max(mechanisms.values(),key=len))+1,columns=len(mechanisms.keys())*2,column_headers=False,row_headers=False)\n",
    "\n",
    "\n",
    "cell = column(0,list([list(mechanisms.keys())[0]]) + list(mechanisms.values())[0],row_start = 0)\n",
    "cell = column(1,list([\"range (min,max)\"]) + [None]*14,row_start = 0)\n",
    "cell = column(2,list([list(mechanisms.keys())[1]]) + list(mechanisms.values())[1],row_start = 0)\n",
    "cell = column(3,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(4,list([list(mechanisms.keys())[2]]) + list(mechanisms.values())[2],row_start = 0)\n",
    "cell = column(5,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "cell = column(6,list([list(mechanisms.keys())[3]]) + list(mechanisms.values())[3],row_start = 0)\n",
    "cell = column(7,list([\"range\"]) + [None]*14,row_start = 0)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = ipysheet.to_dataframe(sheet1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.fillna('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod,columns=numberNeuromod,column_headers=False,row_headers=False)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "cell = column(0, [\"Neuromodulators\",\"Dopamine\",\"Acetylcholine\"],row_start = 0)\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "column(0, [\"Neuromodulators\",\"Dopamine\",\"Acetylcholine\"],row_start = 0)\n",
    "column(0, [\"Receptors\",\"D1R\",\"M1R, M4R\"],row_start = 0)\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "column(0, [\"Neuromodulators\",\"Dopamine\",\"Acetylcholine\"],row_start = 0)\n",
    "column(1, [\"Receptors\",\"D1R\",\"M1R, M4R\"],row_start = 0)\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "column(0, [\"Neuromodulators\",\"Dopamine\",\"Acetylcholine\"],row_start = 0)\n",
    "column(1, [\"Receptors\",\"D1R\",\"M1R, M4R\"],row_start = 0)\n",
    "column(2, [\"Ion channels\",\"naf,kaf\",\"naf\"],row_start = 0)\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ipysheet import sheet,cell,row,column,cell_range\n",
    "import ipysheet\n",
    "import json\n",
    "#ipysheet.pandas_loader.from_dataframe(dataframe)\n",
    "\n",
    "numberNeuromod = 2\n",
    "\n",
    "sheet1 = sheet(rows = numberNeuromod + 1,columns=numberNeuromod + 1,column_headers=False,row_headers=False)\n",
    "column(0, [\"Neuromodulators\",\"Dopamine\",\"Acetylcholine\"],row_start = 0)\n",
    "column(1, [\"Receptors\",\"D1R\",\"M1R, M4R\"],row_start = 0)\n",
    "column(2, [\"Ion channels\",\"nav1,kv3\",\"nav2\"],row_start = 0)\n",
    "sheet1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot([1,2,1])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot([1,2,1])\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 4
}
